--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v98=0;local v99;while true do if (v98==1) then return v99;end if (v98==0) then v99=v5(v83,v19);v19=nil;v98=1;end end else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -(3 -0))^(v32-(2 -1))))%((1 + 1)^(((v33-1) -(v32-(1 -0))) + 1 + 0)) ;return v84-(v84%(2 -1)) ;else local v85=(621 -(555 + 64))^(v32-(932 -(857 + (1139 -(68 + 997))))) ;return (((v31%(v85 + v85))>=v85) and (1638 -(1523 + 114))) or (568 -(367 + 201)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 + 0 );v18=v18 + 1 + 3 ;return (v40 * 16777216) + (v39 * 65536) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=0 -(18 -(10 + 8)) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==((0 + 0) -0)) then v42=v23();v43=v23();v41=1;end if (v41==2) then v46=v20(v43,38 -17 ,381 -(87 + 263) );v47=((v20(v43,212 -((118 -51) + 113) )==1) and  -(1 + 0)) or (2 -1) ;v41=3 + (0 -0) ;end if ((11 -(450 -(416 + 26)))==v41) then if (v46==(952 -((1240 -(145 + 293)) + 150))) then if (v45==(0 -(430 -(44 + 386)))) then return v47 * 0 ;else local v100=0;while true do if (v100==(0 -0)) then v46=1;v44=0 + 0 ;break;end end end elseif (v46==((4530 -(998 + 488)) -(291 + 624 + 82))) then return ((v45==(0 -0)) and (v47 * ((1 + 0)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(2210 -(1069 + 118)) ) * (v44 + (v45/((4 -(2 + 0))^52))) ;end if ((1 -0)==v41) then v44=1 + (772 -(201 + 571)) ;v45=(v20(v43,1,35 -15 ) * ((2 + 0)^(823 -(368 + 423)))) + v42 ;v41=6 -(12 -8) ;end end end local function v25(v48) local v49;if  not v48 then local v86=1138 -(116 + 1022) ;while true do if (v86==(0 -0)) then v48=v23();if (v48==(0 + 0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -((862 -(814 + 45)) -(4 -2)) );v18=v18 + v48 ;local v50={};for v65=3 -2 , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 935 -(39 + 896) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0 -0 ;end)();while true do if (v67==(0 -0)) then if (2~=v51) then else v56[ #"-19"]=(function() return v21();end)();for v101= #"~",v23() do local v102=(function() return v21();end)();if (v20(v102, #".", #"~")~=0) then else local v109=(function() return 0 -0 ;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v109==1) then v112=(function() return nil;end)();v113=(function() return nil;end)();v109=(function() return 2;end)();end if (v109==(2 + 0)) then while true do if (v110~= #"!") then else local v120=(function() return 0 + 0 ;end)();local v121=(function() return;end)();while true do if (v120==0) then v121=(function() return 396 -(115 + 281) ;end)();while true do if (v121~=0) then else v113=(function() return {v22(),v22(),nil,nil};end)();if (v111==0) then local v822=(function() return 0;end)();local v823=(function() return;end)();while true do if (v822==(0 + 0)) then v823=(function() return 0;end)();while true do if (v823==0) then v113[ #"91("]=(function() return v22();end)();v113[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v111== #"[") then v113[ #"19("]=(function() return v23();end)();elseif (v111==(4 -2)) then v113[ #"xxx"]=(function() return v23() -((7 -5)^16) ;end)();elseif (v111~= #"xnx") then else local v835=(function() return 0;end)();local v836=(function() return;end)();while true do if (v835~=0) then else v836=(function() return 867 -(550 + 317) ;end)();while true do if (v836~=(0 -0)) then else v113[ #"-19"]=(function() return v23() -((2 -0)^16) ;end)();v113[ #"0836"]=(function() return v22();end)();break;end end break;end end end v121=(function() return 1;end)();end if (v121~=(2 -1)) then else v110=(function() return 287 -(134 + 151) ;end)();break;end end break;end end end if (v110~= #"19(") then else if (v20(v112, #"-19", #"xxx")~= #"\\") then else v113[ #"0836"]=(function() return v58[v113[ #"0836"]];end)();end v53[v101]=(function() return v113;end)();break;end if (v110~=2) then else local v123=(function() return 0;end)();local v124=(function() return;end)();while true do if (v123~=(1665 -(970 + 695))) then else v124=(function() return 0 -0 ;end)();while true do if (v124==(1991 -(582 + 1408))) then v110=(function() return  #"-19";end)();break;end if (v124==0) then if (v20(v112, #",", #">")~= #"/") then else v113[6 -4 ]=(function() return v58[v113[2 -0 ]];end)();end if (v20(v112,2,2)~= #"}") then else v113[ #"xxx"]=(function() return v58[v113[ #"gha"]];end)();end v124=(function() return 3 -2 ;end)();end end break;end end end if (v110~=(1824 -(1195 + 629))) then else local v125=(function() return 0 -0 ;end)();local v126=(function() return;end)();while true do if (v125~=0) then else v126=(function() return 241 -(187 + 54) ;end)();while true do if (v126==0) then v111=(function() return v20(v102,2, #"-19");end)();v112=(function() return v20(v102, #".com",786 -(162 + 618) );end)();v126=(function() return 1;end)();end if (v126==(1 + 0)) then v110=(function() return  #" ";end)();break;end end break;end end end end break;end if (v109~=(0 + 0)) then else v110=(function() return 0;end)();v111=(function() return nil;end)();v109=(function() return 1 -0 ;end)();end end end end for v103= #"|",v23() do v54,v103,v28=(function() return v52(v54,v103,v28);end)();end return v56;end if (v51==1) then local v96=(function() return 0 -0 ;end)();local v97=(function() return;end)();while true do if (v96==0) then v97=(function() return 0;end)();while true do if ((1 + 1)~=v97) then else v51=(function() return 2;end)();break;end if ((1636 -(1373 + 263))==v97) then v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v97=(function() return 1;end)();end if (v97==(1001 -(451 + 549))) then v58=(function() return {};end)();for v114= #"!",v57 do local v115=(function() return 0 + 0 ;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();while true do if (v115~=(1 -0)) then else v118=(function() return nil;end)();while true do if (v116==0) then v117=(function() return v21();end)();v118=(function() return nil;end)();v116=(function() return 1 -0 ;end)();end if ((1385 -(746 + 638))==v116) then if (v117== #",") then v118=(function() return v21()~=0 ;end)();elseif (v117==2) then v118=(function() return v24();end)();elseif (v117~= #"asd") then else v118=(function() return v25();end)();end v58[v114]=(function() return v118;end)();break;end end break;end if (v115==(0 + 0)) then local v414=(function() return 0;end)();while true do if ((1 -0)~=v414) then else v115=(function() return 342 -(218 + 123) ;end)();break;end if (v414==(1581 -(1535 + 46))) then v116=(function() return 0 + 0 ;end)();v117=(function() return nil;end)();v414=(function() return 1;end)();end end end end end v97=(function() return 1 + 1 ;end)();end end break;end end end v67=(function() return 1;end)();end if (v67==1) then if (v51==(560 -(306 + 254))) then v52=(function() return function(v104,v105,v106) local v107=(function() return 0;end)();local v108=(function() return;end)();while true do if (v107==(0 + 0)) then v108=(function() return 0;end)();while true do if (v108~=(0 -0)) then else v104[v105-#"," ]=(function() return v106();end)();return v104,v105,v106;end end break;end end end;end)();v53=(function() return {};end)();v54=(function() return {};end)();v55=(function() return {};end)();v51=(function() return 1468 -(899 + 568) ;end)();end break;end end end end local function v29(v59,v60,v61) local v62=v59[1 + 0 ];local v63=v59[4 -2 ];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=604 -(190 + 78 + 335) ;local v73= -(291 -(60 + 230));local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v87=0,v76 do if ((3008==3008) and (4757>2193) and (v87>=v70)) then v74[v87-v70 ]=v75[v87 + (573 -(426 + 146)) ];else v78[v87]=v75[v87 + 1 + 0 ];end end local v79=(v76-v70) + (1457 -(282 + 1174)) ;local v80;local v81;while true do local v88=811 -(569 + 242) ;while true do if (v88==(2 -1)) then if ((295<775) and (3927<4606) and (v81<=(2 + 20))) then if ((v81<=(34 -24)) or (4828<=3019)) then if (v81<=(1028 -(706 + 318))) then if ((2317>=2150) and (v81<=(1252 -(721 + 530)))) then if ((v81==((6070 -4799) -(945 + 326))) or (1578<=1012)) then local v127=0 -0 ;local v128;local v129;local v130;while true do if ((v127==((1 -0) + 0)) or (2399>3386)) then v130={};v129=v10({},{__index=function(v707,v708) local v709=700 -(271 + 429) ;local v710;while true do if ((v709==(0 + 0)) or (3148==739)) then v710=v130[v708];return v710[1 + 0 ][v710[1502 -(1408 + 92) ]];end end end,__newindex=function(v711,v712,v713) local v714=v130[v712];v714[1087 -(461 + 625) ][v714[1290 -(993 + 295) ]]=v713;end});v127=1 + 1 ;end if (v127==(1171 -(418 + 753))) then v128=v69[v80[3]];v129=nil;v127=1 + 0 ;end if ((4576<4666) and (v127==(1 + 1 + 0))) then for v716=1 + 0 ,v80[2 + (5 -3) ] do local v717=529 -((423 -(12 + 5)) + 123) ;local v718;while true do if ((v717==(1770 -(1749 + 20))) or (3476>4701)) then if ((v718[1 + 0 ]==33) or (3843==3030)) then v130[v716-1 ]={v78,v718[1148 -(466 + 679) ]};else v130[v716-(2 -1) ]={v60,v718[1 + 2 ]};end v77[ #v77 + 1 + 0 ]=v130;break;end if (v717==(0 -0)) then v72=v72 + (2 -1) ;v718=v68[v72];v717=115 -(4 + 110) ;end end end v78[v80[2]]=v29(v128,v129,v61);break;end end else local v131=584 -(57 + 527) ;local v132;while true do if ((2522>1584) and (v131==(1427 -(41 + 1386)))) then v132=nil;v78[v80[2]]=v78[v80[(262 -156) -(17 + 86) ]][v80[3 + 1 ]];v72=v72 + (1 -0) ;v80=v68[v72];v131=2 -1 ;end if (v131==(170 -(122 + 44))) then v78[v80[2 -0 ]]=v80[1 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v80[1976 -(1656 + 317) ];v131=5 + 0 ;end if ((3245==3245) and (v131==(2 + 6))) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1 -0) ;v131=74 -(30 + 35) ;end if ((v131==(4 + 1)) or (4374<=3729)) then v72=v72 + (1258 -(1043 + 214)) ;v80=v68[v72];v78[v80[2]]=v80[(10 + 1) -8 ];v72=v72 + (1213 -(323 + 713 + 176)) ;v131=(39 -24) -9 ;end if ((v131==(592 -(361 + 219))) or (4458<=2954)) then v72=v72 + (321 -(53 + 267)) ;v80=v68[v72];v72=v80[1 + (9 -7) ];break;end if (v131==(414 -(15 + 398))) then v78[v80[984 -(18 + 964) ]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[2 + 1 ];v131=356 -(5 + 349) ;end if ((v131==(852 -(20 + 830))) or (4938<=1325) or (2080<=467)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[(612 -483) -(116 + 10) ];v72=v72 + 1 + 0 ;v131=741 -(542 + 196) ;end if ((v131==(23 -12)) or (2930>4142)) then v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]];v72=v72 + 1 + (1271 -(266 + 1005)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[7 -4 ];v131=1563 -(1126 + 425) ;end if (v131==(414 -(118 + 287))) then v80=v68[v72];v78[v80[7 -5 ]]=v80[1124 -(118 + 1003) ];v72=v72 + (2 -1) ;v80=v68[v72];v131=10;end if (v131==(383 -(94 + 48 + (801 -566)))) then v80=v68[v72];v78[v80[2]]=v80[13 -10 ];v72=v72 + 1 + 0 ;v80=v68[v72];v131=984 -(553 + (557 -133)) ;end if ((583>=133) and (v131==((1714 -(561 + 1135)) -8))) then v132=v80[2 + 0 ];v78[v132]=v78[v132](v13(v78,v132 + (1 -0) + 0 ,v80[3]));v72=v72 + 1 + 0 ;v80=v68[v72];v131=5 + 6 ;end if (v131==(2 + 1)) then v80=v68[v72];v78[v80[(12 -8) -2 ]]=v80[7 -4 ];v72=v72 + (2 -1) ;v80=v68[v72];v131=2 + 2 ;end if (v131==7) then v78[v80[9 -7 ]]=v80[3];v72=v72 + (754 -(239 + 514)) ;v80=v68[v72];v78[v80[(1067 -(507 + 559)) + 1 ]]=v80[1332 -(797 + 532) ];v131=6 + 2 ;end end end elseif (v81<=(1 + 1)) then local v133=v78[v80[(22 -13) -5 ]];if ((58<618) and (432==432) and  not v133) then v72=v72 + (1203 -(373 + 829)) ;else v78[v80[733 -(476 + 255) ]]=v133;v72=v80[1133 -(369 + 761) ];end elseif (v81>(2 + 1)) then v78[v80[2]]=v78[v80[5 -2 ]][v80[7 -3 ]];elseif ((1456<=4224) and  not v78[v80[240 -(64 + 174) ]]) then v72=v72 + 1 + 0 ;else v72=v80[3];end elseif (v81<=7) then if ((v81<=(7 -2)) or (1698>=2384)) then v78[v80[6 -4 ]]=v61[v80[339 -(144 + 192) ]];elseif (v81==6) then local v420;local v421;v78[v80[218 -((430 -(212 + 176)) + 174) ]]=v61[v80[3 + (905 -(250 + 655)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1507 -(363 + 1141) ]][v80[1584 -(1183 + 397) ]];v72=v72 + ((5 -3) -1) ;v80=v68[v72];v78[v80[2 + (0 -0) ]]=v80[3];v72=v72 + (1 -0) + 0 ;v80=v68[v72];v78[v80[1977 -(1913 + 62) ]]=v80[2 + 1 ];v72=v72 + ((1958 -(1869 + 87)) -1) ;v80=v68[v72];v78[v80[1935 -(565 + 1368) ]]=v80[11 -8 ];v72=v72 + (1662 -(1477 + (638 -454))) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v421=v80[2];v78[v421]=v78[v421](v13(v78,v421 + (857 -((2465 -(484 + 1417)) + 292)) ,v80[3]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[5 -3 ]][v80[307 -(244 + 60) ]]=v78[v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[478 -(41 + 435) ]][v80[1004 -(938 + 63) ]]=v80[4];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1127 -(936 + 189) ]][v80[1 + 2 ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[1615 -(1565 + (102 -54)) ]]=v61[v80[2 + 1 ]];v72=v72 + (1139 -(782 + 356)) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[3]][v80[271 -(176 + 91) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[(775 -(48 + 725)) -0 ]]=v80[(1788 -693) -(975 + 117) ];v72=v72 + (1876 -(157 + (4609 -2891))) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[(6 + 4) -7 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[(2725 -1705) -(697 + 90 + 231) ]]=v80[7 -4 ];v72=v72 + (1 -0) ;v80=v68[v72];v421=v80[4 -2 ];v78[v421]=v78[v421](v13(v78,v421 + 1 + 0 ,v80[5 -2 ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1229 -(322 + 905) ]][v80[3]]=v78[v80[615 -(602 + 9) ]];v72=v72 + (1190 -(131 + 318 + 740)) ;v80=v68[v72];v78[v80[874 -(826 + 46) ]]=v61[v80[950 -(245 + 702) ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3]][v80[1902 -(260 + 1638) ]];v72=v72 + (441 -(382 + 58)) ;v80=v68[v72];v78[v80[2]]=v78[v80[(862 -(152 + 701)) -6 ]][v80[4 + 0 ]];v72=v72 + (1312 -(430 + 881)) ;v80=v68[v72];v78[v80[2]][v80[5 -2 ]]=v78[v80[11 -7 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[1208 -(902 + 303) ]]=v80[8 -(899 -(557 + 338)) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]][v80[1 + 0 + 2 ]]=v78[v80[1694 -(1121 + 569) ]];v72=v72 + (215 -(22 + 192)) ;v80=v68[v72];v78[v80[2]]=v61[v80[686 -(483 + 200) ]];v72=v72 + (1464 -(1404 + 59)) ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[3 -0 ]][v80[769 -(468 + 297) ]];v72=v72 + (563 -(334 + 228)) ;v80=v68[v72];v78[v80[6 -4 ]]=v80[6 -3 ];v72=v72 + 1 ;v80=v68[v72];v421=v80[2 -(0 -0) ];v78[v421]=v78[v421](v78[v421 + 1 + 0 ]);v72=v72 + (237 -(141 + 95)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[10 -7 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[3]][v80[1 + 3 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[166 -(92 + 71) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 -0 ]]=v80[768 -(574 + 191) ];v72=v72 + (2 -1) + 0 ;v80=v68[v72];v421=v80[4 -2 ];v78[v421]=v78[v421](v13(v78,v421 + 1 ,v80[2 + 1 ]));v72=v72 + (850 -(254 + 595)) ;v80=v68[v72];v78[v80[(275 -147) -(55 + 71) ]][v80[3 -0 ]]=v78[v80[1794 -(573 + (2018 -(499 + 302))) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[3]];v72=v72 + (867 -(39 + 827)) ;v80=v68[v72];v78[v80[(5 -3) -0 ]]=v78[v80[3]][v80[943 -(714 + 225) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -0 ]]=v80[1 + 2 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[(1804 -996) -(118 + 688) ]]=v80[51 -(25 + 23) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1888 -(927 + 959) ]]=v80[10 -7 ];v72=v72 + (733 -(16 + 716)) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[100 -((43 -32) + 86) ];v72=v72 + 1 ;v80=v68[v72];v421=v80[4 -2 ];v78[v421]=v78[v421](v13(v78,v421 + 1 ,v80[288 -((268 -93) + 110) ]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[9 -7 ]][v80[1799 -(503 + 1293) ]]=v78[v80[11 -7 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1063 -(810 + 251) ]]=v61[v80[3 + 0 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[536 -(43 + 490) ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[736 -(711 + (64 -42)) ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[861 -(240 + 100 + 519) ]]=v80[1 + 2 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1747 -(1344 + 400) ];v72=v72 + 1 ;v80=v68[v72];v421=v80[2];v78[v421]=v78[v421](v13(v78,v421 + 1 ,v80[408 -(255 + 150) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[(2 -0) + 0 ]][v80[2 + (105 -(103 + 1)) ]]=v78[v80[16 -12 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[6 -4 ]][v80[1742 -(404 + 1335) ]]=v80[410 -(183 + (777 -(475 + 79))) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v61[v80[2 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[339 -(10 + (706 -379)) ]]=v78[v80[3]][v80[3 + 1 ]];v72=v72 + (339 -((377 -259) + 220)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[452 -(108 + 341) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(2 + 6) -6 ]]=v80[1496 -(711 + 782) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3];v72=v72 + (470 -(270 + 199)) ;v80=v68[v72];v421=v80[1 + 1 ];v78[v421]=v78[v421](v13(v78,v421 + (1820 -(580 + 1239)) ,v80[(8 + 0) -5 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[2 + 1 ]]=v78[v80[9 -5 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[1170 -(645 + 522) ]];v72=v72 + ((3294 -(1395 + 108)) -(1010 + 780)) ;v80=v68[v72];v78[v80[2]]=v78[v80[3 + 0 ]][v80[(54 -35) -15 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1838 -(1045 + 791) ]]=v78[v80[3]][v80[9 -5 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[(1208 -(7 + 1197)) -1 ]]=v78[v80[509 -(351 + 154) ]];v72=v72 + (1575 -(1281 + 293)) ;v80=v68[v72];v78[v80[2]][v80[269 -(28 + 238) ]]=v80[4];v72=v72 + 1 ;v80=v68[v72];v78[v80[4 -2 ]][v80[1562 -(1381 + 178) ]]=v78[v80[2 + 2 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3 + 0 ]~=(0 + 0) ;v72=v72 + ((2 + 1) -2) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]][v80[474 -(381 + 89) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v421=v80[2];v420=v78[v80[3 + 0 ]];v78[v421 + (1 -0) ]=v420;v78[v421]=v420[v80[1160 -(1074 + 82) ]];else local v520=0 -(319 -(27 + 292)) ;local v521;while true do if ((2711<3812) and (v520==(1784 -(214 + 1570)))) then v521=v80[(4269 -2812) -(990 + 465) ];v78[v521]=v78[v521](v13(v78,v521 + 1 + 0 ,v80[2 + (1 -0) ]));break;end end end elseif (v81<=(8 + 0)) then v78[v80[7 -5 ]]=v78[v80[1729 -(1668 + 58) ]] -v78[v80[630 -(512 + (477 -363)) ]] ;elseif ((v81==9) or (891>3655)) then local v522=(0 -0) -0 ;local v523;while true do if ((5 -2)==v522) then v72=v72 + ((5 -2) -2) ;v80=v68[v72];v78[v80[1 + (140 -(43 + 96)) ]]=v61[v80[(4 -3) + 2 ]];v72=v72 + 1 + 0 ;v522=13 -9 ;end if (v522==(2001 -(109 + 1885))) then v72=v72 + (1470 -(1269 + (452 -252))) ;v80=v68[v72];v78[v80[3 -1 ]]=v80[3];break;end if (v522==(816 -(98 + 717))) then v78[v80[828 -(802 + 24) ]]=v78[v80[5 -2 ]][v80[4 -0 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3 + 0 ];v522=1 + 1 ;end if (((1 + 3)==v522) or (4287<3622)) then v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[3]][v80[13 -9 ]];v72=v72 + 1 ;v80=v68[v72];v522=2 + 0 + 3 ;end if ((34<=2569) and (v522==2)) then v72=v72 + 1 + 0 ;v80=v68[v72];v523=v80[2];v78[v523](v78[v523 + 1 + 0 ]);v522=3 + 0 ;end if ((v522==(3 + 2)) or (2876==1323)) then v78[v80[1435 -(797 + 636) ]]=v80[14 -11 ];v72=v72 + 1 ;v80=v68[v72];v523=v80[2];v522=1625 -(1427 + 192) ;end if ((v522==(0 + 0)) or (746>=2339)) then v523=nil;v78[v80[2]]=v61[v80[6 -3 ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v522=1 + 0 ;end if ((2030==2030) and (v522==(332 -(192 + 134)))) then v78[v523]=v78[v523](v78[v523 + (1277 -(316 + 960)) ]);v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v522=6 + 1 ;end end elseif ((3002>=894) and (v80[2 + 0 ]==v78[v80[15 -11 ]])) then v72=v72 + (552 -(83 + 468)) ;else v72=v80[1809 -(1202 + 604) ];end elseif ((v81<=(74 -58)) or (1376<=1032)) then if (v81<=(20 -7)) then if ((v81<=11) or (2040==682)) then local v137;v78[v80[2]]=v80[8 -5 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[327 -(18 + 27 + 280) ]]=v80[(5 -2) + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v137=v80[2];v78[v137]=v78[v137](v13(v78,v137 + 1 + 0 ,v80[3]));v72=v72 + ((1 + 0) -0) ;v80=v68[v72];v78[v80[2]][v80[1914 -(340 + 1571) ]]=v78[v80[2 + 2 ]];v72=v72 + ((3524 -(1414 + 337)) -(1733 + 39)) ;v80=v68[v72];v78[v80[5 -3 ]]=v61[v80[1037 -(125 + 909) ]];v72=v72 + (1949 -(1096 + 852)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[3 -0 ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[515 -((2349 -(1642 + 298)) + 103) ];v72=v72 + (237 -(46 + 190)) ;v80=v68[v72];v78[v80[2]]=v80[98 -(51 + (114 -70)) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1319 -((3204 -2090) + 203) ]]=v80[729 -((676 -448) + 498) ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v137=v80[665 -(174 + 489) ];v78[v137]=v78[v137](v13(v78,v137 + (2 -1) ,v80[3]));v72=v72 + (1906 -(830 + 1075)) ;v80=v68[v72];v78[v80[526 -(303 + 221) ]][v80[(2244 -(357 + 615)) -(231 + 1038) ]]=v78[v80[4 + 0 ]];v72=v72 + (1163 -(171 + 991)) ;v80=v68[v72];v78[v80[8 -(5 + 1) ]][v80[(17 -10) -4 ]]=v80[9 -(5 + 0) ];v72=v72 + (2 -1) + 0 ;v80=v68[v72];v78[v80[6 -4 ]][v80[8 -5 ]]=v80[4];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[6 -4 ]]=v61[v80[(1001 + 250) -(8 + 103 + 1137) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[160 -(91 + 67) ]]=v78[v80[8 -5 ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[525 -(423 + 100) ]]=v80[3];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[1303 -(384 + 917) ]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v137=v80[2 + 0 ];v78[v137]=v78[v137](v13(v78,v137 + 1 ,v80[3]));v72=v72 + ((1469 -(128 + 569)) -(326 + 445)) ;v80=v68[v72];v78[v80[8 -6 ]][v80[6 -3 ]]=v78[v80[9 -(1548 -(1407 + 136)) ]];v72=v72 + (712 -(530 + 181)) ;v80=v68[v72];v78[v80[883 -((2501 -(687 + 1200)) + 267) ]]=v61[v80[3]];v72=v72 + (33 -(19 + 13)) ;v80=v68[v72];v78[v80[2 -0 ]]=v78[v80[6 -3 ]][v80[4]];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[1 + 2 ]][v80[6 -2 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[(3526 -(556 + 1154)) -(1293 + 519) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -2 ]][v80[5 -2 ]]=v80[17 -13 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[1 + (6 -4) ]]=v78[v80[9 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v61[v80[1 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1098 -(709 + 387) ]]=v78[v80[1861 -(673 + 1185) ]][v80[11 -7 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v80[4 -1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v137=v80[(97 -(9 + 86)) + 0 ];v78[v137]=v78[v137](v78[v137 + (1 -0) ]);v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v61[v80[5 -2 ]];v72=v72 + (1881 -(446 + 1434)) ;v80=v68[v72];v78[v80[(1706 -(275 + 146)) -(1040 + 243) ]]=v78[v80[8 -(1 + 4) ]][v80[4]];v72=v72 + ((1912 -(29 + 35)) -(559 + 1288)) ;v80=v68[v72];v78[v80[2]]=v80[1934 -(609 + 1322) ];v72=v72 + (455 -(13 + 441)) ;v80=v68[v72];v78[v80[8 -6 ]]=v80[10 -7 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[9 -7 ]]=v80[1 + 2 ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1 + (2 -1) ]]=v80[3];v72=v72 + (4 -3) + 0 ;v80=v68[v72];v137=v80[2];v78[v137]=v78[v137](v13(v78,v137 + 1 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[(4 + 1) -3 ]][v80[2 + 1 ]]=v78[v80[7 -3 ]];v72=v72 + 1 + (1012 -(53 + 959)) ;v80=v68[v72];v78[v80[2]]=v61[v80[2 + (409 -(312 + 96)) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3 + 0 ]][v80[4 + 0 ]];v72=v72 + (434 -(153 + 280)) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[3 + 0 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (1 -0) + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + ((286 -(147 + 138)) -0) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + ((1567 -(813 + 86)) -(89 + 578)) ;v80=v68[v72];v137=v80[2 + 0 ];v78[v137]=v78[v137](v13(v78,v137 + (1 -0) ,v80[1052 -(572 + 477) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[3]]=v78[v80[3 + 1 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[3]];v72=v72 + (87 -(84 + 2)) ;v80=v68[v72];v78[v80[2]]=v78[v80[4 -1 ]][v80[3 + 1 ]];v72=v72 + (843 -(497 + 312 + 33)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[(1 -0) + 2 ];v72=v72 + ((1826 -(18 + 474)) -(605 + 246 + 482)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[6 -3 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[(3 -2) + 1 ]]=v80[3];v72=v72 + (3 -2) ;v80=v68[v72];v137=v80[2 + 0 ];v78[v137]=v78[v137](v13(v78,v137 + 1 ,v80[7 -4 ]));v72=v72 + (1087 -(860 + 226)) + 0 ;v80=v68[v72];v78[v80[2]][v80[492 -(457 + 32) ]]=v78[v80[2 + 2 ]];v72=v72 + ((1706 -(121 + 182)) -(832 + 570)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[1 + 2 ]]=v80[4];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[2]]=v61[v80[2 + 1 ]];v72=v72 + (797 -(588 + 208)) ;v80=v68[v72];v78[v80[5 -3 ]]=v78[v80[1803 -(884 + 916) ]][v80[8 -4 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[655 -(232 + 421) ]]=v80[1892 -(1569 + 320) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[9 -6 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[608 -(316 + 289) ];v72=v72 + (2 -1) ;v80=v68[v72];v137=v80[1 + 1 ];v78[v137]=v78[v137](v13(v78,v137 + ((2694 -(988 + 252)) -(666 + 787)) ,v80[3]));v72=v72 + (426 -(360 + 65)) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[257 -(9 + 70 + 175) ]]=v78[v80[5 -1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v61[v80[5 -2 ]];v72=v72 + (900 -(503 + 396)) ;v80=v68[v72];v78[v80[183 -(92 + 89) ]]=v78[v80[5 -2 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[2 + 1 ]][v80[(5 + 10) -11 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]][v80[6 -3 ]]=v78[v80[(1974 -(49 + 1921)) + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]][v80[1 + 2 ]]=v80[5 -1 ];v72=v72 + (1245 -(485 + 759)) ;v80=v68[v72];v78[v80[4 -(892 -(223 + 667)) ]][v80[1192 -(442 + 747) ]]=v78[v80[1139 -(832 + 303) ]];v72=v72 + ((999 -(51 + 1)) -(88 + 858)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v61[v80[3 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[791 -(766 + 23) ]]=v78[v80[14 -11 ]][v80[5 -1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[6 -4 ]]=v80[3];v72=v72 + (1074 -(1036 + 37)) ;v80=v68[v72];v137=v80[2];v78[v137]=v78[v137](v78[v137 + (1 -0) + 0 ]);v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -1 ]]=v61[v80[3 + 0 ]];v72=v72 + (1481 -(641 + 839)) ;v80=v68[v72];v78[v80[915 -(910 + (6 -3)) ]]=v78[v80[7 -4 ]][v80[1688 -(1466 + 218) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[(2276 -(146 + 979)) -(157 + 399 + 592) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[811 -(329 + (1084 -(311 + 294))) ];v72=v72 + (855 -(174 + (1896 -1216))) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[6 -(2 + 2) ]]=v80[(1448 -(496 + 947)) -2 ];v72=v72 + 1 ;v80=v68[v72];v137=v80[2 + 0 ];v78[v137]=v78[v137](v13(v78,v137 + (740 -(396 + 343)) ,v80[1 + 2 ]));elseif ((v81>(1489 -(29 + 1448))) or (269>2382)) then local v524;v78[v80[1391 -(135 + 1254) ]]=v78[v80[3]][v80[4]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[9 -(1365 -(1233 + 125)) ]]=v80[1 + 1 + 1 ];v72=v72 + (1528 -(389 + 1138)) ;v80=v68[v72];v78[v80[576 -(102 + 472) ]]=v80[3 + 0 ];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1548 -(320 + 1225) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[1467 -(157 + 1307) ];v72=v72 + (1860 -(821 + 198 + 840)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[(1646 -(963 + 682)) + 2 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1027 -(834 + 192)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(2 + 0) -0 ]]=v80[(1811 -(504 + 1000)) -(300 + 4) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[7 -4 ];v72=v72 + (363 -(112 + 169 + 81)) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[3];v72=v72 + (2 -1) ;v80=v68[v72];v524=v80[2 + 0 ];v78[v524]=v78[v524](v13(v78,v524 + 1 + 0 ,v80[3]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 + 0 ]]=v78[v80[2 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[(134 + 1282) -(1001 + 413) ]]=v80[6 -(4 -1) ];v72=v72 + 1 ;v80=v68[v72];v72=v80[885 -(244 + 638) ];else v78[v80[2]][v80[696 -(627 + 66) ]]=v78[v80[(10 + 1) -7 ]];end elseif ((836<4132) and (v81<=14)) then local v241=602 -(512 + 90) ;local v242;while true do if ((2989>=1063) and (2427==2427) and (v241==9)) then v78[v80[1908 -(1665 + 241) ]][v80[720 -(373 + 344) ]]=v78[v80[2 + 0 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[5 -3 ]]=v80[4 -1 ];break;end if ((2406<=3221) and (3491>3393) and (v241==(1106 -(35 + 1064)))) then v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[6 -3 ]];v72=v72 + 1 ;v80=v68[v72];v241=(183 -(156 + 26)) + 7 ;end if ((((714 + 524) -(298 + 938))==v241) or (3885>4312)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1261 -(233 + 1026) ]]=v80[1669 -(636 + 1030) ];v72=v72 + 1 ;v241=2 + 1 ;end if (v241==(5 + 0)) then v78[v80[2]]=v78[v80[1 + 2 ]] + v78[v80[4]] ;v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v61[v80[3]];v241=227 -((85 -30) + 166) ;end if ((3567<4459) and (v241==6)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[1 + 2 ]][v80[(179 -(149 + 15)) -11 ]];v72=v72 + 1 ;v241=304 -(36 + 261) ;end if (v241==(4 -1)) then v80=v68[v72];v78[v80[1370 -(34 + 1334) ]]=v80[2 + 1 ];v72=v72 + (961 -(890 + 70)) + 0 ;v80=v68[v72];v241=(1404 -(39 + 78)) -(1035 + 248) ;end if (v241==(21 -(20 + 1))) then v242=nil;v78[v80[2 + (482 -(14 + 468)) ]]=v61[v80[322 -((294 -160) + 185) ]];v72=v72 + (1134 -(549 + 584)) ;v80=v68[v72];v241=(1917 -1231) -(314 + 371) ;end if (v241==(27 -(10 + 9))) then v242=v80[970 -(478 + 490) ];v78[v242]=v78[v242](v78[v242 + 1 + 0 + 0 ]);v72=v72 + ((250 + 923) -(786 + 386)) ;v80=v68[v72];v241=28 -19 ;end if ((1380 -(1055 + 147 + 177))==v241) then v78[v80[2]]=v78[v80[1343 -(1093 + 247) ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[11 -8 ];v241=2;end if ((v241==4) or (1860>=2065)) then v242=v80[6 -4 ];v78[v242]=v78[v242](v13(v78,v242 + (2 -1) ,v80[7 -4 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v241=19 -14 ;end end elseif ((v81>15) or (2123>=4894)) then v78[v80[6 -4 ]]=v80[3 + 0 ];else for v695=v80[2],v80[7 -4 ] do v78[v695]=nil;end end elseif (v81<=((186 + 521) -(364 + 324))) then if (v81<=(46 -29)) then if ((3619==3619) and (v78[v80[4 -2 ]]==v80[7 -3 ])) then v72=v72 + 1 + 0 ;else v72=v80[3 + 0 ];end elseif (v81==(75 -57)) then local v557=0;local v558;while true do if (v557==4) then v78[v558]=v78[v558](v13(v78,v558 + (1 -0) ,v80[3]));v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[5 -3 ]][v80[3]]=v78[v80[4]];v72=v72 + (1269 -(1249 + 19)) ;v557=5 + 0 ;end if (v557==(27 -20)) then v72=v80[3];break;end if (v557==(1089 -(686 + 400))) then v80=v68[v72];v78[v80[2 + 0 ]]=v80[232 -(2 + 71 + 156) ];v72=v72 + 1 + 0 ;v80=v68[v72];v558=v80[813 -(721 + 90) ];v557=1 + 3 ;end if ((2132<3335) and (v557==(6 -4))) then v78[v80[(523 -(12 + 39)) -(209 + 15 + 246) ]]=v80[4 -1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]]=v80[1 + (5 -3) ];v72=v72 + 1 + (0 -0) ;v557=3;end if (v557==(2 + 3)) then v80=v68[v72];v78[v80[3 -1 ]]=v60[v80[9 -6 ]];v72=v72 + (514 -(203 + 310)) ;v80=v68[v72];v78[v80[1995 -(1238 + 755) ]][v80[3]]=v80[1 + 3 ];v557=1540 -(709 + 825) ;end if ((v557==(10 -4)) or (2128<1754)) then v72=v72 + 1 ;v80=v68[v72];v78[v80[2 -0 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v557=7;end if ((v557==(864 -(196 + 668))) or (4584<=3272)) then v558=nil;v78[v80[7 -5 ]]=v61[v80[5 -2 ]];v72=v72 + (834 -(171 + 662)) ;v80=v68[v72];v78[v80[95 -(4 + 89) ]]=v78[v80[10 -(4 + 3) ]][v80[2 + 2 ]];v557=4 -3 ;end if ((1043<=3558) and (v557==(1 + 0))) then v72=v72 + (1487 -(35 + 1451)) ;v80=v68[v72];v78[v80[2]]=v80[1456 -(28 + (3613 -2188)) ];v72=v72 + (1994 -(941 + 1052)) ;v80=v68[v72];v557=2 + 0 ;end end else v78[v80[1516 -(822 + 692) ]]=v78[v80[3 -(0 + 0) ]][v78[v80[2 + 2 ]]];end elseif ((71==71) and (v81<=(317 -((217 -172) + 252)))) then local v243;v78[v80[2 + 0 ]]=v61[v80[3]];v72=v72 + 1 + (1710 -(1596 + 114)) ;v80=v68[v72];v78[v80[2]]=v78[v80[7 -4 ]][v80[437 -(114 + 319) ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[(4 -2) + 0 ]]=v80[4 -1 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + (1964 -(556 + 1407)) ;v80=v68[v72];v78[v80[1208 -(741 + (1178 -(164 + 549))) ]]=v80[468 -(170 + (1733 -(1059 + 379))) ];v72=v72 + 1 + 0 ;v80=v68[v72];v243=v80[2];v78[v243]=v78[v243](v13(v78,v243 + 1 + 0 ,v80[7 -4 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[(2 -0) + 0 ]][v80[2 + 1 + 0 ]]=v78[v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1232 -(957 + 273) ]]=v60[v80[1 + 2 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -5 ]][v80[3]]=v80[10 -6 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[5 -3 ]]=v80[14 -(2 + 9) ];elseif (v81>(1801 -(389 + 1391))) then do return;end else v78[v80[2 + 0 ]]=v29(v69[v80[1 + 2 ]],nil,v61);end elseif ((v81<=(75 -42)) or (4477<=3601)) then if (v81<=27) then if (v81<=24) then if (((2793==2793) and (v81>(974 -(783 + 168)))) or (3478==589)) then local v264=0 -0 ;local v265;local v266;local v267;while true do if ((1732>=130) and ((1 + 0)==v264)) then v267=0;for v721=v265,v80[4] do local v722=311 -(309 + 2) ;while true do if (v722==(0 -0)) then v267=v267 + (1213 -((1482 -(145 + 247)) + 122)) ;v78[v721]=v266[v267];break;end end end break;end if ((v264==(0 + 0)) or (867>3215)) then v265=v80[6 -4 ];v266={v78[v265](v78[v265 + 1 + 0 ])};v264=1119 -(628 + 227 + 263) ;end end else local v268=0 + 0 ;local v269;while true do if ((0 -0)==v268) then v269=v80[9 -7 ];v78[v269]=v78[v269](v78[v269 + (775 -(431 + 343)) ]);break;end end end elseif (v81<=(50 -25)) then local v270=0 -0 ;local v271;while true do if ((665<=4541) and (0==v270)) then v271=v80[5 -(1 + 2) ];v78[v271](v78[v271 + 1 ]);break;end end elseif ((v81==26) or (561>911)) then local v562=v80[2 + 0 ];local v563=v80[4];local v564=v562 + 1 + 1 ;local v565={v78[v562](v78[v562 + (16 -(6 + 9)) ],v78[v564])};for v701=1,v563 do v78[v564 + v701 ]=v565[v701];end local v566=v565[1 + 0 ];if ((1089<=3455) and v566) then v78[v564]=v566;v72=v80[2 + 1 ];else v72=v72 + (170 -((45 -17) + 141)) ;end else local v567=v80[1 + 1 ];local v568=v78[v80[3 -0 ]];v78[v567 + (721 -(254 + 466)) + (560 -(544 + 16)) ]=v568;v78[v567]=v568[v80[4]];end elseif ((v81<=(1347 -(486 + 831))) or (3522<2146)) then if ((v81<=(72 -44)) or (3491<=3258)) then local v272;local v273;v78[v80[6 -4 ]]=v61[v80[1 + 2 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1265 -(668 + 595) ]]=v78[v80[3 + 0 ]][v80[1 + 3 ]];v72=v72 + ((5 -3) -1) ;v80=v68[v72];v78[v80[292 -(23 + 267) ]]=v80[1947 -(1129 + 815) ];v72=v72 + (388 -(371 + (644 -(294 + 334)))) ;v80=v68[v72];v273=v80[1752 -((1579 -(236 + 17)) + 424) ];v78[v273]=v78[v273](v78[v273 + (1 -0) ]);v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[120 -(88 + 30) ]]=v61[v80[774 -(720 + 51) ]];v72=v72 + (2 -1) ;v80=v68[v72];v273=v80[(767 + 1011) -(421 + 1355) ];v272=v78[v80[4 -1 ]];v78[v273 + 1 ]=v272;v78[v273]=v272[v80[2 + 2 ]];v72=v72 + ((844 + 240) -(286 + 797)) ;v80=v68[v72];v78[v80[7 -5 ]]=v80[(14 -10) -1 ];v72=v72 + (440 -(397 + 42)) ;v80=v68[v72];v273=v80[1 + 1 ];v78[v273]=v78[v273](v13(v78,v273 + (801 -(24 + 776)) ,v80[4 -1 ]));v72=v72 + ((3721 -2935) -(222 + 563)) ;v80=v68[v72];v78[v80[2]][v80[6 -3 ]]=v78[v80[2 + 1 + 1 ]];v72=v72 + (191 -(23 + 167)) ;v80=v68[v72];v78[v80[1800 -(690 + 1108) ]]=v61[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3 + 0 ]][v80[(702 + 150) -(40 + 808) ]];v72=v72 + (795 -(413 + 381)) ;v80=v68[v72];v78[v80[1 + 1 + 0 ]]=v80[11 -8 ];v72=v72 + 1 + 0 ;v80=v68[v72];v273=v80[2 + 0 ];v78[v273]=v78[v273](v78[v273 + 1 + 0 ]);v72=v72 + (572 -(47 + 524)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v61[v80[8 -5 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[1729 -(1165 + 561) ]][v80[(1 -0) + 3 ]];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[1 + (2 -1) ]]=v80[482 -(341 + 138) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[3 -1 ]]=v80[329 -(89 + 237) ];v72=v72 + (3 -2) ;v80=v68[v72];v78[v80[(1973 -(582 + 1388)) -(1 -0) ]]=v80[884 -(581 + 300) ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1222 -(855 + 365) ]]=v80[6 -3 ];v72=v72 + 1 + 0 + (364 -(326 + 38)) ;v80=v68[v72];v273=v80[2];v78[v273]=v78[v273](v13(v78,v273 + (1236 -((3046 -2016) + 205)) ,v80[3 + 0 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]][v80[(411 -122) -(156 + 130) ]]=v78[v80[624 -(47 + 573) ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2 -(0 + 0) ]]=v61[v80[5 -2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[(4 -3) + 1 ]]=v78[v80[2 + 1 ]][v80[73 -(10 + 59) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[14 -(1675 -(1269 + 395)) ];v72=v72 + (1164 -(671 + 492)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[(1710 -(76 + 416)) -(369 + 846) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + (443 -(319 + 124)) ]]=v80[1948 -(1036 + 909) ];v72=v72 + 1 + 0 ;v80=v68[v72];v273=v80[2 -0 ];v78[v273]=v78[v273](v13(v78,v273 + 1 ,v80[206 -(11 + 192) ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[178 -((308 -173) + 40) ]]=v78[v80[9 -5 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v61[v80[6 -3 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v78[v80[179 -(50 + 126) ]][v80[11 -7 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[1416 -(1233 + 180) ];v72=v72 + (970 -((1529 -(564 + 443)) + 447)) ;v80=v68[v72];v78[v80[1423 -(107 + 1314) ]]=v80[2 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1 + (2 -1) ]]=v80[5 -2 ];v72=v72 + (3 -2) ;v80=v68[v72];v273=v80[1912 -(716 + 1194) ];v78[v273]=v78[v273](v13(v78,v273 + 1 + 0 ,v80[1 + 2 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[2]][v80[506 -(74 + 429) ]]=v78[v80[4]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1 + 1 ]][v80[6 -3 ]]=v80[3 + (459 -(337 + 121)) ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v61[v80[436 -(279 + (450 -296)) ]];v72=v72 + (779 -((1512 -1058) + 324)) ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[20 -(12 + 5) ]][v80[3 + 1 ]];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + (1094 -(277 + 816)) ;v80=v68[v72];v78[v80[(1919 -(1261 + 650)) -6 ]]=v80[(502 + 684) -(1058 + 125) ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[977 -(815 + 160) ]]=v80[12 -(13 -4) ];v72=v72 + 1 ;v80=v68[v72];v273=v80[4 -2 ];v78[v273]=v78[v273](v13(v78,v273 + 1 + 0 ,v80[3]));v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1900 -(41 + 1857) ]][v80[(3713 -(772 + 1045)) -(1222 + 671) ]]=v78[v80[1 + 3 ]];v72=v72 + (145 -(102 + 42)) ;v80=v68[v72];v78[v80[2]][v80[7 -4 ]]=v80[5 -1 ];v72=v72 + (1183 -((2073 -(1524 + 320)) + 953)) ;v80=v68[v72];v78[v80[1776 -(1111 + 663) ]][v80[1582 -(874 + 705) ]]=v80[1 + 3 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[6 -(1273 -(1049 + 221)) ]]=v78[v80[1 + 3 ]];v72=v72 + (680 -(642 + 37)) ;v80=v68[v72];v78[v80[2]]=v61[v80[(157 -(18 + 138)) + 2 ]];v72=v72 + 1 + (0 -0) ;v80=v68[v72];v78[v80[4 -2 ]]=v78[v80[457 -((1335 -(67 + 1035)) + 221) ]][v80[8 -4 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1543 -(718 + 823) ]]=v80[2 + 1 ];v72=v72 + (806 -(266 + 539)) ;v80=v68[v72];v273=v80[2];v78[v273]=v78[v273](v78[v273 + (2 -1) ]);v72=v72 + (1226 -(636 + 589)) ;v80=v68[v72];v78[v80[4 -2 ]]=v61[v80[5 -2 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]][v80[2 + 2 ]];v72=v72 + (1016 -(657 + 358)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[(354 -(136 + 212)) -3 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[1189 -(1151 + 36) ]]=v80[3 + 0 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[1834 -(1552 + 280) ]]=v80[837 -(64 + 770) ];v72=v72 + 1 ;v80=v68[v72];v273=v80[2 + 0 ];v78[v273]=v78[v273](v13(v78,v273 + (2 -1) ,v80[1 + 2 ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1245 -(157 + 1086) ]][v80[5 -2 ]]=v78[v80[17 -13 ]];v72=v72 + ((4 -3) -0) ;v80=v68[v72];v78[v80[2 -0 ]][v80[822 -(599 + 177 + 43) ]]=v80[4 + 0 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[1933 -(1813 + 118) ]][v80[3 + 0 ]]=v80[1221 -(841 + 376) ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[(1605 -(240 + 1364)) + 1 ]]=v61[v80[8 -5 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[861 -(464 + (1477 -(1050 + 32))) ]]=v78[v80[7 -4 ]][v80[4]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[839 -(467 + 370) ]]=v80[5 -2 ];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[10 -7 ];v72=v72 + 1 + 0 ;v80=v68[v72];v273=v80[4 -2 ];v78[v273]=v78[v273](v13(v78,v273 + 1 ,v80[523 -(150 + 370) ]));v72=v72 + 1 ;v80=v68[v72];v78[v80[1284 -(74 + 1208) ]][v80[7 -4 ]]=v78[v80[18 -14 ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2]]=v61[v80[3]];v72=v72 + 1 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[3]][v80[14 -10 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[392 -(14 + 376) ]]=v78[v80[4 -1 ]][v80[3 + 1 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[4 + (1055 -(331 + 724)) ]];v72=v72 + ((1 + 1) -1) ;v80=v68[v72];v78[v80[2 + 0 ]][v80[3]]=v80[(726 -(269 + 375)) -(23 + 55) ];v72=v72 + (2 -(726 -(267 + 458))) ;v80=v68[v72];v78[v80[2]][v80[3 + 0 ]]=v78[v80[4 + 0 ]];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v61[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[904 -(652 + 78 + 171) ]][v80[10 -6 ]];v72=v72 + ((3593 -1724) -(708 + 1160)) ;v80=v68[v72];v78[v80[5 -3 ]]=v80[5 -2 ];v72=v72 + (28 -(10 + (835 -(667 + 151)))) ;v80=v68[v72];v273=v80[1 + 1 ];v78[v273]=v78[v273](v78[v273 + (1733 -(1400 + 332)) ]);v72=v72 + 1 ;v80=v68[v72];v78[v80[3 -(1498 -(1410 + 87)) ]]=v61[v80[1911 -(242 + 1666) ]];v72=v72 + 1 ;v80=v68[v72];v78[v80[1 + 1 ]]=v78[v80[2 + 1 ]][v80[4 + 0 ]];elseif ((v81>(969 -(850 + 90))) or (4449<3644)) then local v572=1897 -(1504 + 393) ;local v573;while true do if ((v572==(0 -(0 -0))) or (153>=1887)) then v573=v80[1392 -(360 + 1030) ];v78[v573](v13(v78,v573 + 1 ,v80[3]));break;end end else v78[v80[2 + 0 ]]=v80[7 -4 ]~=(0 -0) ;end elseif (v81<=((4389 -2697) -(909 + 752))) then local v391;v78[v80[1225 -(109 + 1114) ]]=v78[v80[5 -2 ]][v80[2 + 2 ]];v72=v72 + (243 -(6 + 236)) ;v80=v68[v72];v78[v80[2]]=v80[2 + 1 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v80[6 -3 ];v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]]=v80[1136 -((1872 -(461 + 335)) + 57) ];v72=v72 + 1 + 0 ;v80=v68[v72];v391=v80[691 -(579 + 15 + 95) ];v78[v391]=v78[v391](v13(v78,v391 + 1 ,v80[1 + 2 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v78[v80[410 -(174 + 233) ]] -v78[v80[4]] ;v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[3 -1 ]][v80[2 + 1 ]]=v78[v80[1178 -(663 + 511) ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[1 + 1 ]][v78[v80[(1770 -(1730 + 31)) -(1673 -(728 + 939)) ]]]=v80[3 + 1 ];v72=v72 + (2 -1) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[2 + 1 ];elseif ((v81==(62 -30)) or (677>=4143)) then local v575;v78[v80[2]]=v61[v80[3 + 0 ]];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]][v80[726 -(478 + 244) ]];v72=v72 + (518 -(440 + 77)) ;v80=v68[v72];v78[v80[1 + (3 -2) ]]=v80[10 -7 ];v72=v72 + (1557 -(655 + 901)) ;v80=v68[v72];v78[v80[2]]=v80[1 + 2 ];v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2 + 0 ]]=v80[3];v72=v72 + 1 ;v80=v68[v72];v575=v80[7 -5 ];v78[v575]=v78[v575](v13(v78,v575 + (1446 -(695 + 750)) ,v80[9 -6 ]));v72=v72 + (1 -0) ;v80=v68[v72];v78[v80[2]][v80[3]]=v78[v80[(30 -15) -11 ]];v72=v72 + (352 -((652 -367) + 66)) ;v80=v68[v72];v78[v80[4 -2 ]]=v80[1313 -(682 + 628) ];else v78[v80[1 + (1069 -(138 + 930)) ]]=v78[v80[302 -(176 + 123) ]];end elseif ((4422>2292) and (v81<=(17 + 21 + 1))) then if (v81<=(27 + 9)) then if (v81<=(303 -(239 + 30))) then v78[v80[1 + 1 ]][v80[3 + 0 ]]=v80[6 -2 ];elseif (v81>(108 -73)) then local v593=315 -(306 + 9) ;local v594;local v595;while true do if ((v593==6) or (3386<=2556)) then v78[v80[6 -4 ]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[2 + 1 ];break;end if (v593==2) then v78[v595]=v594[v80[4 + 0 ]];v72=v72 + 1 ;v80=v68[v72];v595=v80[1 + 1 ];v593=3;end if ((v593==(8 -5)) or (4932<902)) then v78[v595]=v78[v595](v78[v595 + (1376 -(1140 + 235)) ]);v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]=v78[v80[3]];v593=4 + 0 ;end if ((v593==(0 + 0)) or (503>=1425)) then v594=nil;v595=nil;v78[v80[54 -(33 + 19) ]]=v78[v80[2 + 1 ]][v80[11 -7 ]];v72=v72 + 1 + 0 ;v593=1 -0 ;end if (v593==(5 + 0)) then v80=v68[v72];v78[v80[691 -(586 + 103) ]]=v78[v80[3]];v72=v72 + 1 + 0 ;v80=v68[v72];v593=6;end if ((1765>640) and (4871==4871) and (v593==(2 -1))) then v80=v68[v72];v595=v80[1490 -(1309 + 154 + 25) ];v594=v78[v80[5 -2 ]];v78[v595 + 1 ]=v594;v593=1 + 1 ;end if (v593==(10 -6)) then v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[2]]={};v72=v72 + ((4 -3) -0) ;v593=1771 -(459 + 1307) ;end end else v78[v80[3 -1 ]]=v78[v80[612 -(295 + 314) ]] + v78[v80[4]] ;end elseif ((2515>2280) and (v81<=(90 -53))) then v72=v80[3];elseif (v81==(2000 -(1300 + 662))) then if ((200<4059) and v78[v80[6 -4 ]]) then v72=v72 + (1756 -(1178 + 577)) ;else v72=v80[3];end else v60[v80[3]]=v78[v80[2]];end elseif (v81<=(22 + 20)) then if (v81<=(118 -78)) then v78[v80[1872 -(474 + 1396) ]]=v60[v80[1408 -((1485 -634) + 554) ]];elseif (v81>41) then v78[v80[2 + 0 ]]= not v78[v80[8 -5 ]];else local v600;v78[v80[3 -1 ]]=v80[3];v72=v72 + (303 -(115 + 187)) ;v80=v68[v72];v600=v80[2];v78[v600]=v78[v600](v13(v78,v600 + 1 ,v80[3 + 0 ]));v72=v72 + 1 + 0 ;v80=v68[v72];v78[v80[7 -(5 + 0) ]]=v78[v80[1164 -(160 + 1001) ]];v72=v72 + 1 + 0 + 0 ;v80=v68[v72];v78[v80[2]]=v80[3];v72=v72 + 1 + 0 ;v80=v68[v72];v72=v80[5 -(5 -3) ];end elseif (v81<=(401 -(237 + 121))) then v78[v80[899 -(525 + 372) ]][v78[v80[4 -1 ]]]=v80[12 -8 ];elseif (v81==(186 -(96 + 6 + 40))) then local v610=v80[779 -(643 + 134) ];local v611={};for v704=1 + 0 , #v77 do local v705=v77[v704];for v726=0 -(0 -0) , #v705 do local v727=0 -0 ;local v728;local v729;local v730;while true do if ((1 + (0 -0))==v727) then v730=v728[3 -1 ];if ((v729==v78) and (v730>=v610)) then v611[v730]=v729[v730];v728[1 -0 ]=v611;end break;end if (((719 -(316 + 403))==v727) or (3210<=1400)) then v728=v705[v726];v729=v728[1];v727=1 + 0 ;end end end end else v78[v80[5 -3 ]]={};end v72=v72 + 1 + 0 ;break;end if (v88==(0 -0)) then v80=v68[v72];v81=v80[1];v88=1;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
